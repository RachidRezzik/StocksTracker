[{"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\index.js":"1","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\App.js":"2","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\reportWebVitals.js":"3","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\Home.js":"4","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\StockQuote.js":"5","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\UserPositions.js":"6","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\NavBar.js":"7","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\FeaturedStockPrice.js":"8","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\FeaturedStocks.js":"9","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\AddPositionModal.js":"10","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\Position.js":"11","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\News.js":"12","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\SearchStocks.js":"13","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\Footer.js":"14"},{"size":478,"mtime":1609432735887,"results":"15","hashOfConfig":"16"},{"size":4697,"mtime":1610407402563,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2412,"mtime":1610405825445,"results":"19","hashOfConfig":"16"},{"size":8477,"mtime":1610301231962,"results":"20","hashOfConfig":"16"},{"size":2410,"mtime":1610130744181,"results":"21","hashOfConfig":"16"},{"size":701,"mtime":1610297163335,"results":"22","hashOfConfig":"16"},{"size":2634,"mtime":1610404328407,"results":"23","hashOfConfig":"16"},{"size":1843,"mtime":1610398913610,"results":"24","hashOfConfig":"16"},{"size":4575,"mtime":1610033196722,"results":"25","hashOfConfig":"16"},{"size":3354,"mtime":1610139663697,"results":"26","hashOfConfig":"16"},{"size":3695,"mtime":1610398598674,"results":"27","hashOfConfig":"16"},{"size":3459,"mtime":1610476296194,"results":"28","hashOfConfig":"16"},{"size":693,"mtime":1610408224021,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"aenlmw",{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\index.js",[],["66","67"],"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\App.js",["68"],"import React, {useState} from 'react'\nimport './App.css';\nimport {HashRouter, Switch, Route} from \"react-router-dom\"\n\n//Components\nimport Home from './components/Home'\nimport StockQuote from './components/StockQuote'\nimport NavBar from './components/NavBar';\nimport AddPositionModal from './components/AddPositionModal';\nimport SearchStocks from './components/SearchStocks';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [selectedStock, setSelectedStock] = useState(\"\")\n  const [positionStock, setPositionStock] = useState(\"\")\n  const [positionModal, setPositionModal] = useState(false)\n  \n  // Selected Stock for Stock Quote Page\n  const handleStockClick = (stock) => {\n    setSelectedStock(stock)\n  }\n\n  // Selected Stock for Add/Edit Position Modal\n  const handlePositionClick = (stock) => {\n    setPositionModal(true)\n    setPositionStock(stock)\n  }\n\n  const handleModalClose = () => {\n    setPositionModal(false)\n  }\n\n  ///////////////////////////////////////////////////\n\n  //Setting Up Local Storage to Remember User Positions on Refresh\n\n  const setUserPositionsStorage = (userPositions) => {\n    localStorage.setItem('userPositions', JSON.stringify(userPositions))\n  }\n  \n  const readUserPositionsStorage = () => {\n    return JSON.parse(localStorage.getItem('userPositions'))\n  }\n\n  if (localStorage.getItem('userPositions') === null){\n    setUserPositionsStorage([])\n  }\n\n  const [userPositions, setUserPositions] = useState(readUserPositionsStorage() != null ? readUserPositionsStorage() : [])\n\n  //Handling an Addition/Edit/Removal of The User's Positions\n\n  const handleEditPosition = (positions, stockObject) => {\n    let new_positions = positions.filter(position => position.stock !== stockObject.stock)\n    setUserPositions(new_positions.concat([stockObject]))\n    setUserPositionsStorage(new_positions.concat([stockObject]))\n  }\n\n  const handleRemovePosition = (stock) => {\n    if (userPositions.length === 1) {\n      setUserPositions([])\n      setUserPositionsStorage([])\n    } else{\n      let new_positions = readUserPositionsStorage().filter(position => position.stock !== stock)\n      setUserPositions(new_positions)\n      setUserPositionsStorage(new_positions)\n    }\n  }\n  \n  const handleAddPositionSubmit = (stock, numberShares, avgPrice) => {\n    let stockObject = {}\n    stockObject.stock = stock\n    stockObject.numberShares = numberShares\n    stockObject.avgPrice = avgPrice\n    \n    let positions = readUserPositionsStorage()\n    if (positions.find(position => position.stock === stock)){\n      stockObject.key = positions.filter(position => position.stock === stock)[0].key\n      handleEditPosition(positions, stockObject)\n    } else{\n      stockObject.key = userPositions.length + 1\n      setUserPositions(userPositions.concat([stockObject]))\n      setUserPositionsStorage(userPositions.concat([stockObject]))\n    }\n  }\n\n  ///////////////////////////////////////////////////\n\n  //Handling User Stock Search \n  \n  const [searchOpen, setSearchOpen] = useState(false)\n\n  const handleSearchOpen = () => {\n    setSearchOpen(!searchOpen)\n  }\n\n  const handleSearchClose = () => {\n    setSearchOpen(false)\n  }\n\n  //Detecting Page Refresh to ReShuffle the Order of Featured Stocks displayed in the News Section\n  window.onbeforeunload = (e) => {\n    localStorage.removeItem('articles')\n  }\n\n  return (\n    <div className=\"App\">\n      <HashRouter baseline=\"/\">\n        <NavBar \n        searchOpen={searchOpen}\n        handleSearchOpen={handleSearchOpen}\n        handleSearchClose={handleSearchClose}\n        />\n        <SearchStocks \n        userPositions={userPositions}\n        searchOpen={searchOpen}\n        handleSearchClose={handleSearchClose}\n        handleStockClick={handleStockClick}  \n        handlePositionClick={handlePositionClick}\n        />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home\n          handleStockClick={handleStockClick}  \n          handlePositionClick={handlePositionClick}\n          handleRemovePosition={handleRemovePosition}\n          handleSearchClose={handleSearchClose}\n          userPositions={userPositions}  \n          />} />\n          <Route path=\"/StockQuote\" render={() => <StockQuote\n          selectedStock={selectedStock} \n          userPositions={userPositions}  \n          handlePositionClick={handlePositionClick}\n          />} />\n        </Switch>\n        <Footer />\n        <AddPositionModal \n        positionModal={positionModal}  \n        positionStock={positionStock}\n        userPositions={userPositions}\n        handleAddPositionSubmit={handleAddPositionSubmit} \n        handleModalClose={handleModalClose} \n        />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\reportWebVitals.js",[],"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\Home.js",["69"],"import React, {useState} from 'react'\r\n\r\n//COMPONENTS\r\nimport FeaturedStocks from './FeaturedStocks'\r\nimport News from './News'\r\nimport UserPositions from './UserPositions'\r\n\r\nexport default function Home(props) {\r\n    const featuredStocks = [\r\n        {\r\n            key: 1,\r\n            name: \"AMAZON\",\r\n            ticker: 'AMZN',\r\n            logo: \"https://storage.googleapis.com/iexcloud-hl37opg/api/logos/AMZN.png\"\r\n        },\r\n        {\r\n            key: 2,\r\n            name: \"IBM\",\r\n            ticker: 'IBM',\r\n            logo: \"https://storage.googleapis.com/iexcloud-hl37opg/api/logos/IBM.png\"\r\n        },\r\n        {\r\n            key: 3,\r\n            name: \"NETFLIX\",\r\n            ticker: 'NFLX',\r\n            logo: \"https://storage.googleapis.com/iexcloud-hl37opg/api/logos/NFLX.png\"\r\n        },\r\n        {\r\n            key: 4,\r\n            name: \"TESLA\",\r\n            ticker: 'TSLA',\r\n            logo: \"https://storage.googleapis.com/iexcloud-hl37opg/api/logos/TSLA.png\"\r\n        },\r\n        {\r\n            key: 5,\r\n            name: \"APPLE\",\r\n            ticker: 'AAPL',\r\n            logo: \"https://storage.googleapis.com/iexcloud-hl37opg/api/logos/AAPL.png\"\r\n        },\r\n        {\r\n            key: 6,\r\n            name: \"MICROSOFT\",\r\n            ticker: 'MSFT',\r\n            logo: \"https://storage.googleapis.com/iexcloud-hl37opg/api/logos/MSFT.png\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"home_container\">\r\n            <div className=\"home_left\">\r\n                <UserPositions \r\n                userPositions={props.userPositions}\r\n                handlePositionClick={props.handlePositionClick}\r\n                handleStockClick={props.handleStockClick}\r\n                handleRemovePosition={props.handleRemovePosition}\r\n                />\r\n                <h1 id=\"news_title\">News</h1>\r\n                <News\r\n                featuredStocks={featuredStocks.filter(stock => stock.ticker !== \"IBM\")}\r\n                />\r\n            </div>\r\n            <div className=\"home_right\">\r\n                <FeaturedStocks \r\n                handleStockClick={props.handleStockClick}\r\n                handlePositionClick={props.handlePositionClick}\r\n                userPositions={props.userPositions}\r\n                featuredStocks={featuredStocks}\r\n                handleSearchClose={props.handleSearchClose}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\StockQuote.js",["70"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function StockQuote(props) {\r\n    //Local Storage For Refresh, Maintaining the Stock User Wanted to View\r\n    const setSelectedStockStorage = (userPositions) => {\r\n        localStorage.setItem('selectedStock', JSON.stringify(userPositions))\r\n    }\r\n    \r\n    const readSelectedStockStorage = () => {\r\n        return JSON.parse(localStorage.getItem('selectedStock'))\r\n    }\r\n\r\n    if (localStorage.getItem('selectedStock') === null){\r\n        setSelectedStockStorage(props.selectedStock)\r\n    } else if (props.selectedStock !== \"\"){\r\n        setSelectedStockStorage(props.selectedStock)\r\n    }\r\n\r\n    const [selectedStock, setSelectedStock] = useState(props.selectedStock !== \"\" ? props.selectedStock : readSelectedStockStorage())\r\n\r\n\r\n\r\n    const [logoData, setLogoData] = useState({\r\n        url: \"\"\r\n    })\r\n    const [quoteData, setQuoteData] = useState({\r\n        companyName: \"\",\r\n        latestPrice: \"\",\r\n        changePercent: \"\",\r\n        marketCap: \"\",\r\n        peRatio: \"\",\r\n        week52High: \"\",\r\n        week52Low: \"\"\r\n    })\r\n    const [divData, setDivData] = useState({\r\n        amount: \"\",\r\n        paymentDate: \"\",\r\n        recordDate: \"\",\r\n        frequency: \"\"\r\n    })\r\n    const [newsArray, setNewsArray] = useState([])\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n\r\n    \r\n    const [currentPosition, setCurrentPosition] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        console.log(selectedStock)\r\n        let user_positions = props.userPositions\r\n        if (user_positions.length === 0){\r\n            setCurrentPosition(false)\r\n        } else if (user_positions.find(position => position.stock === selectedStock)){\r\n            setCurrentPosition(true)\r\n        } else{\r\n            setCurrentPosition(false)\r\n        }\r\n        \r\n        //Calling API Based on Which of the Featured Stocks they Selected\r\n\r\n        //LOGO DATA\r\n        let url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/logo?token=sk_3e722d9cee6c4ae498d5e8ad9f543015`\r\n        axios.get(url)\r\n        .then((res) => {\r\n            setLogoData({\r\n                url: res.data.url\r\n            })\r\n        })\r\n        .catch((error) => { \r\n            console.log(error)\r\n        })\r\n\r\n        //QUOTE DATA\r\n\r\n        url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/quote?token=sk_3e722d9cee6c4ae498d5e8ad9f543015`\r\n        axios.get(url)\r\n        .then((res) => {\r\n            let marketCap = res.data.marketCap\r\n            if (marketCap.toString().length > 6 && marketCap.toString().length <= 9){\r\n                marketCap = `${Math.round(marketCap / 1000000)} M`\r\n            } else if (marketCap.toString().length >= 10 && marketCap.toString().length <= 12){\r\n                marketCap = `${Math.round(marketCap / 1000000000)} B`\r\n            } else if (marketCap.toString().length >= 12 && marketCap.toString().length <= 15){\r\n                marketCap = `${Math.round(marketCap / 1000000000000)} T`\r\n            }\r\n            setQuoteData({\r\n                companyName: res.data.companyName,\r\n                latestPrice: res.data.latestPrice.toFixed(2),\r\n                changePercent: (res.data.changePercent * 100).toFixed(2),\r\n                marketCap: marketCap,\r\n                peRatio: res.data.peRatio.toFixed(2),\r\n                week52High: res.data.week52High.toFixed(2),\r\n                week52Low: res.data.week52Low.toFixed(2)\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n\r\n        //DIVIDEND DATA\r\n        url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/dividends?token=sk_3e722d9cee6c4ae498d5e8ad9f543015`\r\n        axios.get(url)\r\n        .then((res) => {\r\n            if (res.data[0] === undefined){\r\n                setDivData({\r\n                    amount: \" -\",\r\n                    paymentDate: \" -\",\r\n                    recordDate: \" -\",\r\n                    frequency: \" -\"\r\n                })\r\n            } else{\r\n                setDivData({\r\n                    amount: `$${res.data[0].amount.toFixed(2)}`,\r\n                    paymentDate: res.data[0].paymentDate,\r\n                    recordDate: res.data[0].recordDate,\r\n                    frequency: res.data[0].frequency\r\n                })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n        //News Articles (In English)\r\n        url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/news/last/{100}?token=sk_3e722d9cee6c4ae498d5e8ad9f543015`\r\n        axios.get(url)\r\n        .then((res) => {\r\n            let english_array = res.data.filter(article => article.lang === 'en').slice(0, 5)\r\n            setNewsArray(english_array)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n        setLoading(false)\r\n    }, [selectedStock, props.userPositions])\r\n\r\n    const handleAddPosition = (stock) => {\r\n        props.handlePositionClick(stock)\r\n    }\r\n\r\n    if (isLoading) {\r\n        return(\r\n            <h2>Loading Data..</h2>\r\n        )\r\n    } else{\r\n        return(\r\n            <div className=\"stock_quote\">\r\n                <div className=\"quote_container\">\r\n                    <div className=\"name_logo\">\r\n                        <img style={{border: \"1px solid lightgray\"}} src={logoData.url} alt=\"\"/>\r\n                        <div>\r\n                            <p>{selectedStock}</p>\r\n                            <h2>{quoteData.companyName}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => handleAddPosition(selectedStock)}>{currentPosition ? \"Edit Position\" : \"Add Position\"}</button>\r\n                    </div>\r\n                </div>\r\n                <h4 id=\"price\">Price: ${quoteData.latestPrice} <span className={quoteData.changePercent > 0 ? \"positive_change\" : quoteData.changePercent < 0 ?\"negative_change\" : \"\"}>({quoteData.changePercent}%)</span></h4> \r\n                <div className=\"quote_data\">\r\n                    <div className=\"metrics_info\">\r\n                        <div>\r\n                            <h4>P/E Ratio:</h4>\r\n                            <h4>{quoteData.peRatio}</h4> \r\n                        </div>\r\n                        <div>\r\n                            <h4>Market Cap:</h4>\r\n                            <h4>{quoteData.marketCap}</h4>  \r\n                        </div>\r\n                        <div>\r\n                            <h4>52-Week High:</h4>\r\n                            <h4>${quoteData.week52High}</h4>  \r\n                        </div>\r\n                        <div style={{border: \"none\"}}>\r\n                            <h4>52-Week Low:</h4>\r\n                            <h4>${quoteData.week52Low}</h4>  \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"div_info\">\r\n                        <div>\r\n                            <h4>Dividend:</h4>\r\n                            <h4>{divData.amount}</h4> \r\n                        </div>\r\n                        <div>\r\n                            <h4>Payment Date:</h4>\r\n                            <h4>{divData.paymentDate}</h4> \r\n                        </div>\r\n                        <div>\r\n                            <h4>Record Date:</h4>\r\n                            <h4>{divData.recordDate}</h4> \r\n                        </div>\r\n                        <div style={{border: \"none\"}}>\r\n                            <h4>Frequency:</h4>\r\n                            <h4 style={{textTransform: \"capitalize\"}}>{divData.frequency}</h4> \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <h1 className=\"in_the_news\">Latest News for {selectedStock}</h1>\r\n                <div className=\"articles_container\">\r\n                    {newsArray.length !== 0 ? \r\n                        newsArray.map(article => {\r\n                        return (\r\n                            <a className=\"article_link\" href={article.url} key={article.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                <h2>{article.headline}</h2>\r\n                                <h3>{article.source}</h3>\r\n                            </a>\r\n                        ) \r\n                    }) : \"\"}\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\UserPositions.js",["71"],"import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Position from './Position'\r\n\r\nexport default function UserPositions(props) {\r\n\r\n    useEffect(() => {\r\n        const allPositions = Array.from(document.querySelectorAll('.position_row'))\r\n        allPositions.forEach(position => {\r\n            if (allPositions.indexOf(position) !== allPositions.length -1 && allPositions.indexOf(position) !== 0){\r\n                position.style.borderRadius = \"0px\"\r\n                position.style.borderBottom = \"1px solid black\"\r\n            } else if(allPositions.indexOf(position) === 0){\r\n                position.style.borderRadius = \"5px 5px 0px 0px\"\r\n                position.style.borderBottom = \"none\"\r\n            } else{\r\n                position.style.borderRadius = \"0px 0px 5px 5px\"\r\n                position.style.borderBottom = \"none\"\r\n            }\r\n        })   \r\n    },)\r\n\r\n    return (\r\n        <div className=\"positionSection\">\r\n            <div className=\"positions_headline\">\r\n                <h1>Your Positions</h1>\r\n            </div>\r\n            <div className=\"positions_container\">\r\n                <div className=\"position_row\" id=\"positions_key\">\r\n                    <h4>Stock</h4>\r\n                    <h4>Value</h4>\r\n                    <h4>Gain/Return</h4>\r\n                    <h4>#Shares</h4>\r\n                    <h4>Avg. Price</h4>\r\n                    <h4>Options</h4>\r\n                </div>\r\n                {props.userPositions.length === 0 ? \r\n                <div className=\"position_row\">\r\n                    <h4> - No Positions Added</h4>\r\n                </div>\r\n                :\r\n                props.userPositions.map(position => {\r\n                    return(\r\n                        <Position\r\n                        key={position.key}\r\n                        stock={position.stock}\r\n                        numberShares={position.numberShares}\r\n                        avgPrice={position.avgPrice}\r\n                        handlePositionClick={props.handlePositionClick}\r\n                        handleStockClick={props.handleStockClick}\r\n                        handleRemovePosition={props.handleRemovePosition}\r\n                        userPositions={props.userPositions}\r\n                        />\r\n                    )\r\n                })\r\n                \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\NavBar.js",["72"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Images\r\nimport logo from '../images/RR_finance.JPG'\r\n\r\nexport default function NavBar(props) {\r\n    \r\n    const handleSearchClick = () => {\r\n        props.handleSearchOpen()  \r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"logo_container\">\r\n                <Link to=\"/\">\r\n                    <img src={logo} alt=\"\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"links_container\">\r\n                <Link to=\"/\">Positions</Link>\r\n                <a id=\"search_stocks_icon\" onClick={handleSearchClick}>Stocks 🔍</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\FeaturedStockPrice.js",[],"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\FeaturedStocks.js",[],"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\AddPositionModal.js",["73"],"import React, {useRef, useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Images\r\nimport x_mark from '../images/white_x_mark.png'\r\n\r\nexport default function AddPositionModal(props) {\r\n    const numberShares = React.useRef()\r\n    const avgPrice = React.useRef()\r\n    const [positionSubmitted, setPositionSubmitted] = useState(false)\r\n    \r\n    const handlePositionSubmit = () => {\r\n        const position_error = document.querySelector(\".add_position_error\")\r\n\r\n        if (numberShares.current.value === \"\" || avgPrice.current.value === \"\"){\r\n            position_error.innerHTML = \"Please Fill Both Fields\"\r\n            position_error.style.color = 'red'\r\n        } else if (numberShares.current.value <= 0 || avgPrice.current.value <= 0) {\r\n            position_error.innerHTML = \"Fields Must be Positive Numbers\"\r\n            position_error.style.color = 'red'\r\n        } else{\r\n            position_error.innerHTML = \"Position Successfully Added\"\r\n            position_error.style.color = 'green'\r\n            props.handleAddPositionSubmit(props.positionStock, parseFloat(numberShares.current.value).toFixed(2), parseFloat(avgPrice.current.value).toFixed(2))\r\n            handleModalFieldsClear()\r\n            setPositionSubmitted(true)\r\n        }\r\n    }\r\n\r\n    const handleModalFieldsClear = () => {\r\n        const position_error = document.querySelector(\".add_position_error\")\r\n        position_error.innerHTML = \"no error\"\r\n        position_error.style.color = 'white'\r\n        numberShares.current.value = \"\"\r\n        avgPrice.current.value = \"\"\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        if (positionSubmitted === false){\r\n            handleModalFieldsClear()\r\n        }\r\n        props.handleModalClose()\r\n        setPositionSubmitted(false)\r\n    }\r\n\r\n    const handleViewPositions = () => {\r\n        window.scrollTo({\r\n            top: 0\r\n        })\r\n        props.handleModalClose()\r\n        setPositionSubmitted(false)\r\n    }\r\n\r\n    const node = useRef()\r\n\r\n    const [currentPosition, setCurrentPosition] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let user_positions = props.userPositions\r\n        if (user_positions.length === 0){\r\n            setCurrentPosition(false)\r\n        } else if (user_positions.find(position => position.stock === props.positionStock)){\r\n            setCurrentPosition(true)\r\n        } else{\r\n            setCurrentPosition(false)\r\n        }\r\n\r\n        let handler = (event) => {\r\n            if (!node.current.contains(event.target) && props.positionModal) {\r\n                handleModalClose()\r\n                setPositionSubmitted(false)\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', handler)\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handler)\r\n        }\r\n    }, [props.userPositions, handleModalClose, props.positionModal, props.positionStock]);\r\n\r\n\r\n    return (\r\n        <div className={props.positionModal ? \"add_position_modal active\" : \"add_position_modal\"}>\r\n            <img className={props.positionModal ? \"exit_modal active\" : \"exit_modal\"} src={x_mark} onClick={handleModalClose} alt=\"\"/>\r\n            <div ref={node} className=\"add_position_container\">\r\n                {positionSubmitted ? \r\n                <div>\r\n                    <h2 id=\"position_submitted\">Updated ✔️</h2>\r\n                    <Link to=\"/\" id=\"view_positions\" onClick={handleViewPositions}>View Positions</Link>\r\n                    <button id=\"close_button\" onClick={handleModalClose}>Close</button>\r\n                </div>\r\n                :\r\n                <div> \r\n                <h1 className=\"enter_position_headline\">{props.positionStock}</h1>\r\n                <form onSubmit={handlePositionSubmit}>\r\n                    <div className=\"position_input_container\">\r\n                        <h4>Number of Shares:</h4>\r\n                        <input ref={numberShares} type=\"number\" placeholder=\"0.00\" step=\".01\"/>\r\n                    </div>\r\n                    <div className=\"position_input_container\">\r\n                        <h4>Avg. Share Price ($):</h4>\r\n                        <input ref={avgPrice} type=\"number\" placeholder=\"0.00\" step=\".01\"/>\r\n                    </div>\r\n                    <input className=\"position_submit_button\" type=\"submit\" value={currentPosition ? \"Edit Position\" : \"Add Position\"} />\r\n                </form>\r\n                <h3 className=\"add_position_error\">no error</h3>\r\n                </div>\r\n                }              \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\Position.js",[],"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\News.js",["74"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function News(props) {\r\n    const [isLoading, setLoading] = useState(true)\r\n    const [stock1, setStock1] = useState({})\r\n    const [stock2, setStock2] = useState({})\r\n    const [stock3, setStock3] = useState({})\r\n    const [stock4, setStock4] = useState({})\r\n    const [stock5, setStock5] = useState({})\r\n\r\n    useEffect(() => {\r\n        let newArray = []\r\n        props.featuredStocks.forEach(stock => {\r\n            //News Articles (In English)\r\n            let url = `https://cloud.iexapis.com/stable/stock/${stock.ticker}/news/last/{100}?token=sk_3e722d9cee6c4ae498d5e8ad9f543015`\r\n            axios.get(url)\r\n            .then((res) => {\r\n                let articleRes = res.data.filter(article => article.lang === 'en')[0]\r\n                newArray.push({\r\n                    url: articleRes.url,\r\n                    headline: articleRes.headline,\r\n                    image: articleRes.image,\r\n                    datetime: articleRes.datetime,\r\n                    source: articleRes.source\r\n                })\r\n                if (newArray.length >= 2) {\r\n                    newArray.sort((a,b) => b.datetime - a.datetime)\r\n                } \r\n                if (newArray.length === 5) {\r\n                    setStock1(newArray[0])\r\n                    setStock2(newArray[1])\r\n                    setStock3(newArray[2])\r\n                    setStock4(newArray[3])\r\n                    setStock5(newArray[4])\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n        })\r\n        setLoading(false)\r\n    }, []);\r\n\r\n\r\n    if (isLoading){\r\n        return(\r\n            <h2>Loading News..</h2>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className=\"news\">            \r\n                <div className=\"featuredSection\">\r\n                    {stock1 === undefined ? \r\n                    <h2>undefined</h2>\r\n                    :\r\n                    <a href={stock1.url} target=\"_blank\" rel=\"noreferrer\">\r\n                        <img className=\"featured_image\" src={stock1.image} alt=\"\" />\r\n                        <div className=\"headline_info\">\r\n                            <h2>{stock1.headline}</h2>\r\n                            <h4>{stock1.source}</h4>\r\n                        </div>\r\n                    </a>\r\n\r\n                    }\r\n                </div>\r\n                <div className=\"other_articles\">\r\n                    <a className=\"home_article\" href={stock2.url} target=\"_blank\" rel=\"noreferrer\">\r\n                        <h2>\r\n                        {stock2.headline}\r\n                        </h2>\r\n                        <h4>{stock2.source}</h4>\r\n                    </a>\r\n                    <a className=\"home_article\" href={stock3.url} target=\"_blank\" rel=\"noreferrer\">\r\n                        <h2>\r\n                        {stock3.headline}\r\n                        </h2>\r\n                        <h4>{stock3.source}</h4>\r\n                    </a>\r\n                    <a className=\"home_article\" href={stock4.url} target=\"_blank\" rel=\"noreferrer\">\r\n                        <h2>\r\n                        {stock4.headline}\r\n                        </h2>\r\n                        <h4>{stock4.source}</h4>\r\n                    </a>\r\n                    <a className=\"home_article\" href={stock5.url} target=\"_blank\" rel=\"noreferrer\">\r\n                        <h2>\r\n                        {stock5.headline}\r\n                        </h2>\r\n                        <h4>{stock5.source}</h4>\r\n                    </a> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\SearchStocks.js",["75"],"C:\\Users\\Rachid\\Desktop\\StocksApp\\stocks\\src\\components\\Footer.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":null,"fatal":true,"severity":2,"message":"80","line":136,"column":9},{"ruleId":"81","severity":1,"message":"82","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"85","line":20,"column":27,"nodeType":"83","messageId":"84","endLine":20,"endColumn":43},{"ruleId":"81","severity":1,"message":"86","line":2,"column":9,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":22,"column":17,"nodeType":"89","endLine":22,"endColumn":72},{"ruleId":"90","severity":1,"message":"91","line":38,"column":11,"nodeType":"92","endLine":44,"endColumn":6,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":43,"column":8,"nodeType":"95","endLine":43,"endColumn":10,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"97","line":52,"column":8,"nodeType":"95","endLine":52,"endColumn":33,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 134 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mSwitch\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 135 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mFooter\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 136 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mAddPositionModal\u001b[39m \u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 137 | \u001b[39m        positionModal\u001b[33m=\u001b[39m{positionModal}  \u001b[0m\n\u001b[0m \u001b[90m 138 | \u001b[39m        positionStock\u001b[33m=\u001b[39m{positionStock}\u001b[0m\n\u001b[0m \u001b[90m 139 | \u001b[39m        userPositions\u001b[33m=\u001b[39m{userPositions}\u001b[0m","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setSelectedStock' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","The 'handleModalClose' function makes the dependencies of useEffect Hook (at line 79) change on every render. To fix this, wrap the definition of 'handleModalClose' in its own useCallback() Hook.","VariableDeclarator",["101"],"React Hook useEffect has a missing dependency: 'props.featuredStocks'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Wrap the definition of 'handleModalClose' in its own useCallback() Hook.",{"range":"110","text":"111"},"Update the dependencies array to be: [props.featuredStocks]",{"range":"112","text":"113"},"Update the dependencies array to be: [props, props.handleSearchClose]",{"range":"114","text":"115"},[1620,1797],"useCallback(() => {\r\n        if (positionSubmitted === false){\r\n            handleModalFieldsClear()\r\n        }\r\n        props.handleModalClose()\r\n        setPositionSubmitted(false)\r\n    })",[1684,1686],"[props.featuredStocks]",[1672,1697],"[props, props.handleSearchClose]"]